<?php

//1. Создайте переменную name и присвойте ей значение, содержащее ваше имя, например "Иннокентий".
$name = 'Mike';
//2. Создайте переменную age и присвойте ей значение, содержащее ваш возраст, например 20.
$age = 39;
//3. Выведите с помощью echo фразу "Меня зовут: %ваше_имя%", например: "Меня зовут: Иннокентий".
echo "Меня зовут: $name <br>";
//4. Выведите фразу "Мне %ваш_возраст% лет", например: "Мне 20 лет".
echo "Мне $age лет <br>";
//5. Напишите конструкцию if, которая выводит фразу: "Вам еще работать и работать" при условии, что значение переменной age попадает в диапазон чисел от 18 до 59 (включительно).
if ($age >= 18 and $age <= 59) echo "Вам еще работать и работать <br>";
//6. Расширьте конструкцию if из п.5, выводя фразу: "Вам пора на пенсию" при условии, что значение переменной age больше 59.
elseif ($age > 59) echo "Вам пора на пенсию";
//7. Расширьте конструкцию if из п.5-6, выводя фразу: "Вам еще рано работать" при условии, что значение переменной age попадает в диапазон чисел от 0 до 17 (включительно).
elseif ($age >= 0 and $age <= 17) echo "Вам еще рано работать";
//8. Расширьте конструкцию if из п.5-7, выводя фразу: "Неизвестный возраст" при условии, что значение переменной age является отрицательным числом, или вовсе числом не является.
else echo "Неизвестный возраст";
//9. Создайте переменную day и присвойте ей произвольное числовое значение.
$day =0;
//10. С помощью конструкции switch выведите фразу: "Это рабочий день", если значение переменной day попадает в диапазон чисел от 1 до 5 (включительно).
switch ($day) {
//при сравнени переменной с результатом булева выражения в case последнее приводится к типу переменной в операторе switch. Поэтому ЛОЖЬ = 0 и в случае с $day = 0 любой ложный case отработает. Как вариант обхода - сделать доп. case для обработки 0 значения.
    case 0:
        echo "Неизвестный день<br>";
        break;
    case ($day >= 1) && ($day <= 5):
        echo "Это рабочий день<br>";
        break;
//11. С помощью конструкции switch выведите фразу: "Это выходной день", если значение переменной day попадает в диапазон чисел от 6 до 7 (включительно).
    case ($day >= 6) && ($day <= 7):
        echo "Это выходной день<br>";
        break;
//12. С помощью конструкции switch выведите фразу: "Неизвестный день", если значение переменной day не попадает в диапазон чисел от 1 до 7 (включительно).
    default:
        echo "Неизвестный день<br>"; //case ($day<1 || $day>7): echo "Неизвестный день<br>";
        break;
}
//13. Заданы две переменные: s - длина участка, который проехал автомобиль; t - время движения в часах. Вывести скорость автомобиля на заданном участке в км/час и в м/сек.

$s = 240; //длина участка, который проехал автомобиль, км
$t = 30; //t - время движения в часах
echo 'скорость автомобиля: ' . $s / $t . ' (км/час); ' . round($s / ($t * 3.6), 3) . ' (м/сек)<br>';

//14. Задана переменная $foo = 'bar'; Создать переменную bar, в которой будет храниться число 10. Вывести число 10, используя только переменную $foo (не опечатка).
ini_set('display_errors', 0);
$foo = 'bar';
$bar = 10;
echo 'foo = ' . $$foo . '<br>';

//15. Написать калькулятор. Переменная $a = изменяемое число. Переменная $b = изменяемое число. Переменная $operator = ‘+’ или ‘-’ или ‘/’ или ‘*’ или '%' (остаток от деления). На экран выводить результат в зависимости от значений этих переменных. Не забудьте про деление на 0, если надо - выдавать ошибку что на 0 делить нельзя.
echo '<p>Калькулятор:</p>';
$a = 620;
$b = 620;
$operator = '%';

if (!(is_numeric($a)) || !(is_numeric($b))) {
    echo 'Ошибка: переменные должны быть действительными числами!<br>';
} elseif (($b == 0) && (($operator == '/') || ($operator == '%'))) {
    echo 'Ошибка: используется операция деления, но на 0 делить нельзя!<br>';
} else {
    $tmp = "$a $operator $b = ";
    switch ($operator) {
        case '+':
            echo $tmp . ($a + $b);
            break;
        case '-':
            echo $tmp . ($a - $b);
            break;
        case '/':
            echo $tmp . $a / $b;
            break;
        case '*':
            echo $tmp . ($a * $b);
            break;
        case '%':
            echo $tmp . ($a % $b);
            break;
        default:
            echo "Ошибка: неизвестный оператор!";
    }
    echo '<br>';
}
//16. Создайте две переменные $a и $b, значения которых будут числами. Выведите максимальное число из этих двух.
echo ($a == $b) ? "Числа равны!": "Максимум из двух чисел ($a и $b): ". (($a > $b) ? $a : $b);

//17. Создайте две переменные $a = '78' (строковый тип) и $b = 78 (целочисленный тип). Проверьте эти две переменные на равность, с помощью if выведите "равны" или "не равны".
$a = '78';
$b = 78;
echo "<br>Проверка равенства значений: $a (" . gettype($a) . ") = $b (" . gettype($b) . ")? Ответ: " . (($a == $b) ? 'TRUE' : 'FALSE') . '<br>';

//18. Создайте две переменные $a = '78' (строковый тип) и $b = 78 (целочисленный тип). Проверьте эти две переменные на эквивалентность, с помощью if выведите "эквивалентны" или "не эквивалентны".
echo "Проверка эквивалентности значений: $a (" . gettype($a) . ") = $b (" . gettype($b) . ")? Ответ: " . (($a === $b) ? 'TRUE' : 'FALSE') . '<br>';

//19. Выведите результат сравнения $a и $b из п.17 с помощью var_dump.
echo 'var $a: ';
var_dump($a);
echo '<br> var $b: ';
var_dump($b);

//20. Приведите число 20 к типу boolean. Объясните результат.
$n = 20;
echo "<br>Приведение числа n=$n к типу boolean: " . (bool)$n; // число не равное нулю всегда приводится к логической Истине

//21. Приведите число 0 к типу boolean. Объясните результат.
$n = 0;
echo "<br>Приведение числа n=$n к типу boolean: " . (bool)$n; // число 0 всегда приводится к логической Лжи. При выводе в поток на html ноль и null не отображаются.

//22. Приведите число -20 к типу boolean. Объясните результат.
$n = -20;
echo "<br>Приведение числа n=$n к типу boolean: " . (bool)$n; // число не равное нулю всегда приводится к логической Истине

//23. Напишите 3 строки, используя три разные функции для вывода текста.
echo '<p>какой-то текст (echo)</p>';
print '<p>какой-то текст (print)</p>';
printf('<p>какой-то текст (printf)</p>');
?>
    <p>Еще один пример вывода. Мое имя <?= $name ?><p>

<?php

//24. Создайте в файле 3 комментария тремя разными типами.
$someVar = null; //строковой комментарий
$someVar = 0; #строковой комментарий
/*
много
строчный
комментарий
*/

//25. Приведите пример, чем отличается <?php от <?=.
//<?php лишь объявляет о том, что последующий код интерпретируется как php-инструкции
//а <?= равносильна выводу значения, например так: echo a$
// равносильна: <?=$a

//26. Объявите константу DAYS_COUNT равную 7 и константу MONTH_COUNT равную 12 двумя разными способами объявления констант.
define('DAYS_COUNT', 7);
const MONTH_COUNT = 12;

//27. Выполните скрипт по задаче №4 из консоли (необходимо запустить php скрипт по задаче №4 из командной строки).
// см. скрин 27.png
// Команда запуска: php C:\xampp\htdocs\PHP_start\27.php
